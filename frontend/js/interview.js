// let sessionId = null;

// function addMessage(text, sender) {
//     const chatBox = document.getElementById("chat-box");
//     const div = document.createElement("div");
//     div.className = `msg ${sender}`;
//     div.textContent = text;
//     chatBox.appendChild(div);
//     chatBox.scrollTop = chatBox.scrollHeight;
// }
// topic
// async function startInterview() {
//     const topic = document.getElementById("topic").value.trim();
//     const level = document.getElementById("level").value;

//     const resp = await fetch("/api/start_interview", {
//         method: "POST",
//         headers: {"Content-Type": "application/json"},
//         body: JSON.stringify({ topic, level })
//     });
//     const data = await resp.json();
//     if (data.error) {
//         alert("–û—à–∏–±–∫–∞: " + JSON.stringify(data.error));
//         return;
//     }
//     sessionId = data.session_id;
//     document.getElementById("setup-section").classList.add("hidden");
//     document.getElementById("chat-section").classList.remove("hidden");

//     addMessage("–ò–Ω—Ç–µ—Ä–≤—å—é –Ω–∞—á–∞–ª–æ—Å—å! " + data.question, "bot");
// }

// async function sendAnswer() {
//     const input = document.getElementById("user-answer");
//     const answer = input.value.trim();
//     if (!answer) return;
//     addMessage(answer, "user");
//     input.value = "";

//     const resp = await fetch("/api/answer", {
//         method: "POST",
//         headers: {"Content-Type": "application/json"},
//         body: JSON.stringify({ session_id: sessionId, answer })
//     });
//     const data = await resp.json();

//     if (data.reasoning) {
//         addMessage("–û—Ü–µ–Ω–∫–∞: " + data.reasoning + " (–ë–∞–ª–ª—ã: " + data.score + ")", "bot");
//     }
//     if (data.next_question) {
//         addMessage(data.next_question, "bot");
//     }
//     if (data.finished) {
//         if (data.passed) {
//             addMessage("‚úÖ –ò–Ω—Ç–µ—Ä–≤—å—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ: –ö–∞–Ω–¥–∏–¥–∞—Ç –ø—Ä–æ—à—ë–ª!", "bot");
//         } else {
//             addMessage("‚ùå –ò–Ω—Ç–µ—Ä–≤—å—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ: –ö–∞–Ω–¥–∏–¥–∞—Ç –Ω–µ –ø—Ä–æ—à—ë–ª.", "bot");
//         }
//         document.getElementById("chat-section").classList.add("hidden");
//     }
// }

// // –ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥
// const voiceBtn = document.getElementById("voice-btn");
// const userInput = document.getElementById("user-answer");
// const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;

// if (SpeechRecognition) {
//     const recognition = new SpeechRecognition();
//     recognition.lang = 'ru-RU';
//     recognition.continuous = false;
//     recognition.interimResults = false;

//     voiceBtn.addEventListener("click", () => {
//         recognition.start();
//     });

//     recognition.addEventListener("result", (event) => {
//         const transcript = event.results[0][0].transcript;
//         userInput.value = transcript;
//         sendAnswer();
//     });

//     recognition.addEventListener("end", () => {
//         console.log("–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ");
//     });

// } else {
//     alert("–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥");
// }

document.addEventListener('DOMContentLoaded', function() {
    let sessionId = null;
    const chatBox = document.getElementById("chat-box");
    const setupSection = document.getElementById("setup-section");
    const chatSection = document.getElementById("chat-section");
    const userInput = document.getElementById("user-answer");
    const voiceBtn = document.getElementById("voice-btn");
    const levelSelect = document.getElementById("level");

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    addMessage("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –æ–Ω–ª–∞–π–Ω-—Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ! –í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏ –Ω–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ'.", "bot");

    function addMessage(text, sender) {
        const div = document.createElement("div");
        div.className = `msg ${sender}`;
        div.innerHTML = `<strong>${sender === 'bot' ? '–°–∏—Å—Ç–µ–º–∞' : '–í—ã'}:</strong> ${text}`;
        chatBox.appendChild(div);
        chatBox.scrollTop = chatBox.scrollHeight;
    }

    window.startInterview = async function() {
        const level = levelSelect.value;

        const resp = await fetch("/api/start_interview", {
            method: "POST",
            headers: {"Content-Type": "application/json"},
            body: JSON.stringify({ level })
        });
        
        const data = await resp.json();
        if (data.error) {
            alert("–û—à–∏–±–∫–∞: " + JSON.stringify(data.error));
            return;
        }
        
        sessionId = data.session_id;
        setupSection.classList.add("hidden");
        chatSection.classList.remove("hidden");

        addMessage("–ò–Ω—Ç–µ—Ä–≤—å—é –Ω–∞—á–∞–ª–æ—Å—å! " + data.question, "bot");
    }

    window.sendAnswer = async function() {
        const answer = userInput.value.trim();
        if (!answer) return;
        
        addMessage(answer, "user");
        userInput.value = "";

        const resp = await fetch("/api/answer", {
            method: "POST",
            headers: {"Content-Type": "application/json"},
            body: JSON.stringify({ session_id: sessionId, answer })
        });
        
        const data = await resp.json();

        if (data.next_question) {
            addMessage(data.next_question, "bot");
        }
        if (data.finished) {
            if (data.passed) {
                addMessage("‚úÖ –ò–Ω—Ç–µ—Ä–≤—å—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ: –ö–∞–Ω–¥–∏–¥–∞—Ç –ø—Ä–æ—à—ë–ª!", "bot");
            } else {
                addMessage("‚ùå –ò–Ω—Ç–µ—Ä–≤—å—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ: –ö–∞–Ω–¥–∏–¥–∞—Ç –Ω–µ –ø—Ä–æ—à—ë–ª.", "bot");
            }
            // –ù–µ —Å–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç-—Å–µ–∫—Ü–∏—é, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–µ–ª –∏—Å—Ç–æ—Ä–∏—é
            userInput.disabled = true;
            document.querySelector('button[onclick="sendAnswer()"]').disabled = true;
            if (voiceBtn) voiceBtn.disabled = true;
        }
    }

    // –ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥
    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;

    if (SpeechRecognition) {
        const recognition = new SpeechRecognition();
        recognition.lang = 'ru-RU';
        recognition.continuous = false;
        recognition.interimResults = false;

        voiceBtn.addEventListener("click", () => {
            recognition.start();
            voiceBtn.textContent = "üé§ –°–ª—É—à–∞—é...";
        });

        recognition.addEventListener("result", (event) => {
            const transcript = event.results[0][0].transcript;
            userInput.value = transcript;
            voiceBtn.textContent = "üé§ –ì–æ–≤–æ—Ä–∏—Ç—å";
            sendAnswer();
        });

        recognition.addEventListener("end", () => {
            console.log("–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ");
            voiceBtn.textContent = "üé§ –ì–æ–≤–æ—Ä–∏—Ç—å";
        });

        recognition.addEventListener("error", (event) => {
            console.error("–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è:", event.error);
            voiceBtn.textContent = "üé§ –ì–æ–≤–æ—Ä–∏—Ç—å";
            addMessage("–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤—Ä—É—á–Ω—É—é.", "bot");
        });

    } else {
        alert("–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥");
    }
});


